IMDB projekt

1.	Tagok:
Magyar Ákos
Pákozdi Károly
Varjú Norbert
Vicze Zoltán
Vigh Ádám

2.	Projekt felépítése:
A projekt az MVC mintán alapul, külön részre bontjuk a backendet és a frontendet.
A backend lényegében egy REST API, különböző (HTTP) kéréseket fog kiszolgálni, melyek majd a frontendtől
érkeznek. A backend egy adatbázishoz is kapcsolódik, ahol az adatokat tároljuk.

3.	Tervezett funkcionalitások:
-	felhasználók beléptetése, regisztrációja, elfelejtett jelszó
-	filmek értékelésének, véleményezésének lehetősége a regisztrált felhasználó számára
-	filmekhez érkező véleményekről statisztika gyűjtése, egy átlagos pontszám megállapítása
-	filmekre való szűrés lehetősége
-	stb, TODO: kiegészíteni
*	facebookkal, vagy egyéb social profillal való belépés lehetősége

4.	TODO lista

Mindenki:
-	valami jobb név a projektnek
-	funkcionalitások átbeszélése
-	feladatok átbeszélése
-	fejlesztési folyamattal kapcsolatos dolgok átbeszélése:
	*	heti meetingek kinek mikor jó?
	*	esetleg Slacken (Skypeon) keresztül, vagy személyesen?
	*	ki mennyit időt és energiát tud áldozni a projektre?
	*	kinek mi a célja ezzel a projekttel?
-	git alapok (pull/push, commit, checkout, branch, stb...)
-	git branchelési stratégia (doksi végén)
-	valamilyen git kliens megismerése (git-scm, SourceTree, stb...)

Ádám, Ákos:
-	adatbázisséma megtervezése
-	a funkcionalitást biztosító, paraméterezhető lekérdezések
-	DAO réteg

Karesz:
-	git repó igénylés
-	SSH kulcsok begyűjtése
-	a git repository-hoz és a VM-hez jogosultság biztosítása
-	mySQL szerver telepítése
-	nodejs telepítése
-	a backend alapjának felhúzása, integráció az Angular-ral
-	Jenkins job, ami átmásolja a git commitokat SVN-be
-	Jenkins job, amivel a backendet és/vagy a frontendet lehet deployolni a VM-re

Norbi, Karesz:
-	ismerkedés a Spring MVC-vel (pár alapvető annotáció, servicek, controllerek)
-	REST end-pointok tervezése
-	service layer, business logic megírása
-	helyenként dummy adatok visszaadása, hogy a frontend tudjon haladni
	*	későbbiekben adatbázis-integráció

Zoli:
-	egy alap design összerakása valamilyen mockup toollal
-	HTML, CSS (Bootstrap, jQuery, Angular) ismerkedés, felfrissítés

5.	Git branchelési stratégia
A fejlesztési folyamat a során a branch tekinthető egy "ágnak", ami egy adott feature, task, stb... kifejlesztéséhez ad teret.
A fő (master vagy develop branch) ágból létrehozunk egy új ágat, melyet az az egy, vagy több fejlesztő kap meg, aki az adott 
feladat elvégzéséért felel. Míg ők azon az egy feladaton dolgoznak, addig a többiek tudnak haladni a saját feladatukkal, így 
egymást nem hátráltatják, vagy akadályozzák.
A branchelési stratégiát ez a kép tökéletesen ábrázolja: http://nvie.com/img/git-model@2x.png

Egy új branchet úgy hozunk létre, hogy az mindig jól jellemezze az ő szerepét. Pl.: feature, task, bugfix stb.
Ezután pár szó, ami jellemzi, hogy miért is jött létre az a branch, mi történt ott. Esetleg a végére egy monogram, hogy ki felelős azért az adott feladatért.

Egy teljes példa:
Ha valaki egy új feature-t akar fejleszteni, ami mondjuk azzal kapcsolatos, hogy egy (vagy több) új modult hoz létre, amivel mondjuk filmek között szűrhetünk, akkor azt a branchet elnevezheti mondjuk "feature/movie_filtering_XY"